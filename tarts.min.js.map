{"version":3,"file":"tarts.min.js","sources":["lib/index.js"],"sourcesContent":["const headers = {\n  name: 100,\n  mode: 8,\n  uid: 8,\n  gid: 8,\n  size: 12,\n  mtime: 12,\n  chksum: 8,\n  typeflag: 1,\n  linkname: 100,\n  magic: 5,\n  version: 2,\n  uname: 32,\n  gname: 32,\n  devmajor: 8,\n  devminor: 8,\n  prefix: 155,\n  padding: 12\n}\n\nconst offsets = {}\nObject.keys(headers).reduce((acc, k) => {\n  offsets[k] = acc\n  return acc + headers[k]\n}, 0)\n\nconst defaults = f => ({\n  name: f.name,\n  mode: '777',\n  uid: 0,\n  gid: 0,\n  size: f.content.byteLength,\n  mtime: Math.floor(Number(new Date()) / 1000),\n  chksum: '        ',\n  typeflag: '0',\n  magic: 'ustar',\n  version: '  ',\n  uname: '',\n  gname: ''\n})\n\nconst nopad = ['name', 'linkname', 'magic', 'chksum', 'typeflag', 'version', 'uname', 'gname']\n    , bsize = 512\n\nexport default files => {\n  return files.reduce((a, f) => {\n    if (typeof f.content === 'string')\n      f.content = stringToUint8(f.content)\n\n    f = Object.assign(defaults(f), f)\n\n    const b = new Uint8Array(Math.ceil((bsize + f.size) / bsize) * bsize)\n\n    const checksum = Object.keys(headers).reduce((acc, k) => {\n      if (!(k in f))\n        return acc\n\n      const value = stringToUint8(nopad.indexOf(k) > -1\n        ? f[k]\n        : pad(f[k], headers[k] - 1))\n\n      b.set(value, offsets[k])\n      return acc + value.reduce((a, b) => a + b, 0)\n    }, 0)\n\n    b.set(stringToUint8(pad(checksum, 7)), offsets.chksum)\n    b.set(f.content, bsize)\n\n    const sum = new Uint8Array(a.byteLength + b.byteLength)\n    sum.set(a, 0)\n    sum.set(b, a.byteLength)\n\n    return sum\n  }, new Uint8Array(0))\n}\n\nfunction pad(s, n) {\n  s = s.toString(8)\n  return ('000000000000' + s).slice(s.length + 12 - n)\n}\n\nfunction stringToUint8(s) {\n  const a = new Uint8Array(s.length)\n  for (let i = 0; i < s.length; i++)\n    a[i] = s.charCodeAt(i)\n  return a\n}\n"],"names":["pad","s","n","toString","slice","length","stringToUint8","let","a","Uint8Array","i","charCodeAt","const","headers","name","mode","uid","gid","size","mtime","chksum","typeflag","linkname","magic","version","uname","gname","devmajor","devminor","prefix","padding","offsets","Object","keys","reduce","acc","k","nopad","files","f","content","assign","byteLength","Math","floor","Number","Date","defaults","b","ceil","checksum","value","indexOf","set","sum"],"mappings":"+KA4EA,SAASA,EAAIC,EAAGC,GAEd,OAAQ,gBADRD,EAAIA,EAAEE,SAAS,KACaC,MAAMH,EAAEI,OAAS,GAAKH,GAGpD,SAASI,EAAcL,GAErB,IAAKM,IADCC,EAAI,IAAIC,WAAWR,EAAEI,QAClBK,EAAI,EAAGA,EAAIT,EAAEI,OAAQK,IAC5BF,EAAEE,GAAKT,EAAEU,WAAWD,GACtB,OAAOF,EArFTI,IAAMC,GACJC,KAAM,IACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,EACRC,SAAU,EACVC,SAAU,IACVC,MAAO,EACPC,QAAS,EACTC,MAAO,GACPC,MAAO,GACPC,SAAU,EACVC,SAAU,EACVC,OAAQ,IACRC,QAAS,IAGLC,KACNC,OAAOC,KAAKpB,GAASqB,gBAAQC,EAAKC,GAEhC,OADAL,EAAQK,GAAKD,EACNA,EAAMtB,EAAQuB,IACpB,GAEHxB,IAeMyB,GAAS,OAAQ,WAAY,QAAS,SAAU,WAAY,UAAW,QAAS,yBAGvEC,GACb,OAAOA,EAAMJ,gBAAQ1B,EAAG+B,GACG,iBAAdA,EAAEC,UACXD,EAAEC,QAAUlC,EAAciC,EAAEC,UAE9BD,EAAIP,OAAOS,gBAvBEF,UACfzB,KAAMyB,EAAEzB,KACRC,KAAM,MACNC,IAAK,EACLC,IAAK,EACLC,KAAMqB,EAAEC,QAAQE,WAChBvB,MAAOwB,KAAKC,MAAMC,OAAO,IAAIC,MAAU,KACvC1B,OAAQ,WACRC,SAAU,IACVE,MAAO,QACPC,QAAS,KACTC,MAAO,GACPC,MAAO,IAWaqB,CAASR,GAAIA,GAE/B3B,IAAMoC,EAAI,IAAIvC,WATJ,IASekC,KAAKM,MATpB,IASkCV,EAAErB,MATpC,MAWJgC,EAAWlB,OAAOC,KAAKpB,GAASqB,gBAAQC,EAAKC,GACjD,KAAMA,KAAKG,GACT,OAAOJ,EAETvB,IAAMuC,EAAQ7C,EAAc+B,EAAMe,QAAQhB,IAAM,EAC5CG,EAAEH,GACFpC,EAAIuC,EAAEH,GAAIvB,EAAQuB,GAAK,IAG3B,OADAY,EAAEK,IAAIF,EAAOpB,EAAQK,IACdD,EAAMgB,EAAMjB,gBAAQ1B,EAAGwC,UAAMxC,EAAIwC,GAAG,IAC1C,GAEHA,EAAEK,IAAI/C,EAAcN,EAAIkD,EAAU,IAAKnB,EAAQX,QAC/C4B,EAAEK,IAAId,EAAEC,QAxBE,KA0BV5B,IAAM0C,EAAM,IAAI7C,WAAWD,EAAEkC,WAAaM,EAAEN,YAI5C,OAHAY,EAAID,IAAI7C,EAAG,GACX8C,EAAID,IAAIL,EAAGxC,EAAEkC,YAENY,GACN,IAAI7C,WAAW"}